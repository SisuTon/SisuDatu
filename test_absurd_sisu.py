#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–±—Å—É—Ä–¥–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É —Å –æ–±—É—á–µ–Ω–∏–µ–º
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

from sisu_bot.bot.services.meme_persona_service import meme_persona_service
from sisu_bot.bot.services.chat_activity_service import chat_activity_service
from sisu_bot.bot.services.chat_style_analyzer import chat_style_analyzer
from sisu_bot.bot.services.chat_learning_service import chat_learning_service

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_absurd_persona():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–±—Å—É—Ä–¥–Ω—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é"""
    print("üêâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±—Å—É—Ä–¥–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–±—Å—É—Ä–¥–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç, –°–∏—Å—É!",
        "–¢–û–ù –∫ –ª—É–Ω–µ!",
        "–ê—Ö–∞—Ö–∞, –Ω—É —Ç—ã –¥–∞–µ—à—å!",
        "–ß—Ç–æ –¥—É–º–∞–µ—à—å –ø—Ä–æ –∫—Ä–∏–ø—Ç—É?",
        "–°–∫—É—á–Ω–æ –≤ —á–∞—Ç–µ...",
        "–û–≥–æ–Ω—å! –ö—Ä—É—Ç–æ!",
        "–°–∏—Å—É, —Ä–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
        "–¢—ã –¥—É—Ä–∞–∫!",
        "–ó–∞—Ç–∫–Ω–∏—Å—å!",
        "–ù–∞–¥–æ–µ–ª!"
    ]
    
    chat_id = -1001234567890
    user_id = 12345
    
    for message in test_messages:
        response = meme_persona_service.get_meme_response(message, user_id, chat_id)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"–û—Ç–≤–µ—Ç: {response}")
        print(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {meme_persona_service.get_mood_status()}")
        print("-" * 30)
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–±—Å—É—Ä–¥–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–±—Å—É—Ä–¥–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    stats = meme_persona_service.get_personality_stats()
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")

async def test_absurd_humor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–±—Å—É—Ä–¥–Ω—ã–π —é–º–æ—Ä"""
    print("\nüé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±—Å—É—Ä–¥–Ω–æ–≥–æ —é–º–æ—Ä–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∞–±—Å—É—Ä–¥–Ω—ã—Ö —Ñ—Ä–∞–∑
    absurd_phrases = meme_persona_service.persona_data["meme_responses"]["absurd_humor"]
    print("–ê–±—Å—É—Ä–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã:")
    for i, phrase in enumerate(absurd_phrases[:10], 1):
        print(f"{i}. {phrase}")
    
    print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤:")
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–æ–ª–æ–≤
    teasing_phrases = meme_persona_service.persona_data["meme_responses"]["teasing"]
    print(f"\n–ü–æ–¥–∫–æ–ª—ã: {teasing_phrases[:5]}")
    
    # –¢–µ—Å—Ç –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏—è
    encouragement_phrases = meme_persona_service.persona_data["meme_responses"]["encouragement"]
    print(f"–ü–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏–µ: {encouragement_phrases[:5]}")
    
    # –¢–µ—Å—Ç –∑–ª–æ—Å—Ç–∏
    anger_phrases = meme_persona_service.persona_data["meme_responses"]["anger"]
    print(f"–ó–ª–æ—Å—Ç—å: {anger_phrases[:5]}")

async def test_learning_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ–±—É—á–µ–Ω–∏—è"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è")
    print("=" * 50)
    
    chat_id = -1001234567890
    user_id = 12345
    
    # –¢–µ—Å—Ç 1: –û–±—É—á–µ–Ω–∏–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    learning_messages = [
        "–ø–µ–ª—å–º–µ–Ω—å –∞—Ç–∞–∫—É–µ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫",
        "–∫–æ—Ç —Å—ä–µ–ª –ø–µ–ª—å–º–µ–Ω—å –∏ —Å—Ç–∞–ª —Ç—Ä–∞–∫—Ç–æ—Ä–æ–º",
        "—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –±—ã–ª –±–∞—Ç—è",
        "–∫–æ—Ç –≤ —Ñ–æ—Ç–æ—à–æ–ø–µ —Å –∫–æ–ª—ë—Å–∞–º–∏",
        "—Ä–∞–Ω–¥–æ–º–Ω—ã–π –Ω–∞–±–æ—Ä —Å–ª–æ–≤",
        "–∞–Ω—Ç–∏-—é–º–æ—Ä",
        "—Ç—É–ø–æ—Å—Ç—å –Ω–∞ –º–∞–∫—Å–∏–º—É–º"
    ]
    
    print("–û–±—É—á–∞–µ–º –°–∏—Å—É –Ω–∞ –∞–±—Å—É—Ä–¥–Ω—ã—Ö —Ñ—Ä–∞–∑–∞—Ö...")
    for message in learning_messages:
        chat_learning_service.learn_from_message(message, chat_id, user_id)
        print(f"–ò–∑—É—á–µ–Ω–æ: {message}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è —á–∞—Ç–∞
    chat_style = chat_learning_service.get_chat_style(chat_id)
    print(f"\n–°—Ç–∏–ª—å —á–∞—Ç–∞: {chat_style}")
    
    # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    print("\n–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:")
    for i in range(5):
        response = chat_learning_service.generate_adaptive_response(chat_id)
        print(f"–û—Ç–≤–µ—Ç {i+1}: {response}")
    
    # –¢–µ—Å—Ç 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è
    learning_stats = chat_learning_service.get_learning_stats()
    print(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è: {learning_stats}")

async def test_chat_style_copying():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è —á–∞—Ç–∞"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∏–ª—è —á–∞—Ç–∞")
    print("=" * 50)
    
    chat_id = -1001234567890
    user_id = 12345
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ —á–∞—Ç–æ–≤
    chat_styles = {
        "meme_chat": [
            "–∫–µ–∫ –ª–æ–ª –∞—Ö–∞—Ö–∞",
            "–ø–µ–ª—å–º–µ–Ω—å –∞—Ç–∞–∫—É–µ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫",
            "–∫–æ—Ç —Å—Ç–∞–ª —Ç—Ä–∞–∫—Ç–æ—Ä–æ–º",
            "—Ä–æ—Ñ–ª –æ–º–≥ –≤–∞—É"
        ],
        "crypto_chat": [
            "–¢–û–ù –∫ –ª—É–Ω–µ",
            "HODL Diamond hands",
            "To the moon WAGMI",
            "–∫—Ä–∏–ø—Ç–∞ —Ä—É–ª–∏—Ç"
        ],
        "excited_chat": [
            "–û–ì–û!!! –í–ê–£!!",
            "–ö–†–£–¢–û!!! –°–£–ü–ï–†!!!",
            "–ë–û–ú–ë–ê!! –û–§–ò–ì–ï–ù–ù–û!!",
            "–û–ì–û –ü–ï–õ–¨–ú–ï–ù–¨!!!"
        ]
    }
    
    for style_name, messages in chat_styles.items():
        print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª—å: {style_name}")
        test_chat_id = chat_id + hash(style_name) % 1000
        
        for message in messages:
            chat_learning_service.learn_from_message(message, test_chat_id, user_id)
            print(f"–ò–∑—É—á–µ–Ω–æ: {message}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª—å –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã
        style = chat_learning_service.get_chat_style(test_chat_id)
        print(f"–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Å—Ç–∏–ª—å: {style['dominant_style']}")
        
        for i in range(3):
            response = chat_learning_service.generate_adaptive_response(test_chat_id)
            print(f"–û—Ç–≤–µ—Ç {i+1}: {response}")

async def test_anger_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∑–ª–æ—Å—Ç–∏"""
    print("\nüò° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–ª–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∑–ª–æ—Å—Ç–∏
    anger_messages = [
        "–¢—ã –¥—É—Ä–∞–∫!",
        "–ò–¥–∏–æ—Ç!",
        "–¢—É–ø–æ–π!",
        "–ó–∞—Ç–∫–Ω–∏—Å—å!",
        "–ù–∞–¥–æ–µ–ª!",
        "–ë–µ—Å–∏—à—å!",
        "–ù–µ–Ω–∞–≤–∏–∂—É!",
        "–ü–ª–æ—Ö–æ–π!",
        "–£–∂–∞—Å–Ω–æ!",
        "–ö–æ—à–º–∞—Ä!"
    ]
    
    for message in anger_messages:
        anger_level = chat_style_analyzer.check_anger_triggers(message)
        anger_response = chat_style_analyzer.get_anger_response(anger_level)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"–£—Ä–æ–≤–µ–Ω—å –∑–ª–æ—Å—Ç–∏: {anger_level}")
        print(f"–û—Ç–≤–µ—Ç –∑–ª–æ—Å—Ç–∏: {anger_response}")
        print("-" * 30)
    
    # –¢–µ—Å—Ç 2: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∑–ª–æ—Å—Ç–∏
    print("\nüî• –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∑–ª–æ—Å—Ç–∏")
    meme_persona_service.anger_level = 0
    
    for message in anger_messages[:5]:
        anger_level = chat_style_analyzer.check_anger_triggers(message)
        meme_persona_service.anger_level = min(meme_persona_service.anger_level + anger_level, 10)
        response = meme_persona_service._get_anger_response()
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"–£—Ä–æ–≤–µ–Ω—å –∑–ª–æ—Å—Ç–∏: {meme_persona_service.anger_level}")
        print(f"–û—Ç–≤–µ—Ç: {response}")
        print("-" * 30)

async def test_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    user_id = 12345
    chat_id = -1001234567890
    
    # 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = "–ü—Ä–∏–≤–µ—Ç, –°–∏—Å—É! –ö–∞–∫ –¥–µ–ª–∞?"
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message}")
    
    # 2. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    chat_activity_service.record_message(chat_id, user_id)
    
    # 3. –ü–æ–ª—É—á–∞–µ–º –∞–±—Å—É—Ä–¥–Ω—ã–π –æ—Ç–≤–µ—Ç
    response = meme_persona_service.get_meme_response(message, user_id, chat_id)
    print(f"–°–∏—Å—É: {response}")
    
    # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {meme_persona_service.get_mood_status()}")
    print(f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞: {chat_activity_service.get_chat_stats(chat_id)}")
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    test_messages = [
        "–¢–û–ù –∫ –ª—É–Ω–µ!",
        "–ø–µ–ª—å–º–µ–Ω—å –∞—Ç–∞–∫—É–µ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫",
        "–¢—ã –¥—É—Ä–∞–∫!",
        "–°–∫—É—á–Ω–æ –≤ —á–∞—Ç–µ...",
        "–ß—Ç–æ –¥—É–º–∞–µ—à—å –ø—Ä–æ –∫—Ä–∏–ø—Ç—É?"
    ]
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π")
    for msg in test_messages:
        resp = meme_persona_service.get_meme_response(msg, user_id, chat_id)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {msg}")
        print(f"–û—Ç–≤–µ—Ç: {resp}")
        print("-" * 20)

async def test_absurd_responses():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∞–±—Å—É—Ä–¥–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
    print("\nüé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±—Å—É—Ä–¥–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤")
    print("=" * 50)
    
    chat_id = -1001234567890
    user_id = 12345
    
    # –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ—Ç–≤–µ—Ç–æ–≤
    test_categories = [
        ("teasing", "–∞—Ö–∞—Ö–∞ –Ω—É —Ç—ã –¥–∞–µ—à—å"),
        ("encouragement", "—Å–∫—É—á–Ω–æ –≤ —á–∞—Ç–µ"),
        ("meme", "–º–µ–º –≤–∞–π–± –¥—Ä–∞–π–≤"),
        ("crypto", "—Ç–æ–Ω —Ç–æ–∫–µ–Ω –∫—Ä–∏–ø—Ç–∞"),
        ("question", "—á—Ç–æ –∫–∞–∫ –ø–æ—á–µ–º—É"),
        ("default", "–æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    ]
    
    for category, message in test_categories:
        response = meme_persona_service.get_meme_response(message, user_id, chat_id)
        print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"–û—Ç–≤–µ—Ç: {response}")
        print("-" * 30)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞–±—Å—É—Ä–¥–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É —Å –æ–±—É—á–µ–Ω–∏–µ–º")
    print("=" * 70)
    
    try:
        await test_absurd_persona()
        await test_absurd_humor()
        await test_learning_system()
        await test_chat_style_copying()
        await test_anger_system()
        await test_integration()
        await test_absurd_responses()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("–°–∏—Å—É —Ç–µ–ø–µ—Ä—å –∞–±—Å—É—Ä–¥–Ω–∞—è, –æ–±—É—á–∞—é—â–∞—è—Å—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–∏–≤–∞—è! üêâ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        logger.exception("Test error")

if __name__ == "__main__":
    asyncio.run(main())
