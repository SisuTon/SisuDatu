from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from sisu_bot.bot.services import top_service, points_service
import logging

router = Router()

@router.message(Command("top"))
async def top_handler(msg: Message):
    try:
        top_list = top_service.get_top_users(limit=15)
        text = "<b>üèÜ –¢–û–ü SISU:</b>\n\n"
        medals = ["ü•á", "ü•à", "ü•â"]
        for i, user in enumerate(top_list, 1):
            username = user.username
            first_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            points = float(user.points or 0)
            logging.info(f"TOP: user_id={user.id}, username={username}, points={points}")
            rank_code = user.rank or "novice"
            rank = points_service.RANKS.get(rank_code, {}).get("title", "–ë–µ–∑ —Ä–∞–Ω–≥–∞")
            active_days = user.active_days or 0
            referrals = user.referrals or 0
            supporter = user.is_supporter or False
            if i <= 3:
                medal = medals[i - 1]
            else:
                medal = f"{i}."
            if username:
                if supporter:
                    tag = f"{medal} üëë@{username}üëë"
                else:
                    tag = f"{medal} @{username}"
            else:
                if supporter:
                    tag = f'{medal} üëë<a href="tg://user?id={user.id}">{first_name}</a>üëë'
                else:
                    tag = f'{medal} <a href="tg://user?id={user.id}">{first_name}</a>'
            text += f"{tag} ‚Äî {points}‚≠ê {active_days}üìÖ {referrals}üë• ‚Äî {rank}\n"
        if not top_list:
            text += "\n–í —Ç–æ–ø–µ –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç! –ë—É–¥—å –ø–µ—Ä–≤—ã–º!"
        else:
            text += "\n–•–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø? –ë—É–¥—å –∞–∫—Ç–∏–≤–Ω–µ–µ –∏ –∑–æ–≤–∏ –¥—Ä—É–∑–µ–π!"
        text += "\n\nüëë ‚Äî Supporter (–¥–æ–Ω–∞—Ç–µ—Ä)"
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram: –º–∞–∫—Å–∏–º—É–º 4096 —Å–∏–º–≤–æ–ª–æ–≤
        await msg.answer(text[:4096], parse_mode="HTML")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –≤ top_handler")
        await msg.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–ø–∞ üò¢") 