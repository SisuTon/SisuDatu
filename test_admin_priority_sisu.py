#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–∏ –°–∏—Å—É
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

from sisu_bot.bot.services.meme_persona_service import meme_persona_service

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_admin_priority():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–∏"""
    print("üëë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–∏")
    print("=" * 60)
    
    chat_id = -1001234567890
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤ –∏ –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("1. –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    
    # –°–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤
    admin_messages = [
        "–ê–¥–º–∏–Ω –≥–æ–≤–æ—Ä–∏—Ç: —Ä–µ–π–¥ –Ω–∞ —Ç–≤–∏—Ç—Ç–µ—Ä!",
        "–ê–¥–º–∏–Ω: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É!",
        "–ê–¥–º–∏–Ω: –≤—Å–µ –≤ —Ç–≤–∏—Ç—Ç–µ—Ä!",
        "–ê–¥–º–∏–Ω: —Ä–µ–π–¥ –≤ –¥–µ–π—Å—Ç–≤–∏–∏!",
        "–ê–¥–º–∏–Ω: –∏–¥–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å!"
    ]
    
    # –°–æ–æ–±—â–µ–Ω–∏—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_messages = [
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –∫–∞–∫ –¥–µ–ª–∞?",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø—Ä–∏–≤–µ—Ç –≤—Å–µ–º!",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: —á—Ç–æ –Ω–æ–≤–æ–≥–æ?",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø–æ–Ω—è—Ç–Ω–æ"
    ]
    
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤
    for i, message in enumerate(admin_messages):
        meme_persona_service.remember_chat_message(message, 1000 + i, chat_id, is_admin=True)
        print(f"–ó–∞–ø–æ–º–Ω–∏–ª–∞ –∞–¥–º–∏–Ω–∞: {message}")
    
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for i, message in enumerate(user_messages):
        meme_persona_service.remember_chat_message(message, 2000 + i, chat_id, is_admin=False)
        print(f"–ó–∞–ø–æ–º–Ω–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message}")
    
    print(f"\n–í—Å–µ–≥–æ –∑–∞–ø–æ–º–Ω–∏–ª–∞: {len(admin_messages)} –∞–¥–º–∏–Ω–æ–≤ + {len(user_messages)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

async def test_admin_selection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤")
    print("=" * 50)
    
    chat_id = -1001234567890
    
    # –¢–µ—Å—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –∞–¥–º–∏–Ω–æ–≤
    admin_count = 0
    user_count = 0
    total_tests = 100
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º {total_tests} –≤—ã–±–æ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    
    for i in range(total_tests):
        learned_response = meme_persona_service.get_learned_response(chat_id)
        if learned_response:
            if "–ê–¥–º–∏–Ω" in learned_response:
                admin_count += 1
            elif "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" in learned_response:
                user_count += 1
    
    admin_percentage = (admin_count / total_tests) * 100
    user_percentage = (user_count / total_tests) * 100
    
    print(f"–ê–¥–º–∏–Ω—ã: {admin_count} —Ä–∞–∑ ({admin_percentage:.1f}%)")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_count} —Ä–∞–∑ ({user_percentage:.1f}%)")
    
    if admin_percentage >= 60:
        print("‚úÖ –û–¢–õ–ò–ß–ù–û: –ê–¥–º–∏–Ω—ã –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç!")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ê–¥–º–∏–Ω—ã –Ω–µ –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞!")

async def test_memory_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–º—è—Ç–∏"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–º—è—Ç–∏")
    print("=" * 50)
    
    chat_id = -1001234567890
    
    if hasattr(meme_persona_service, 'chat_memory') and chat_id in meme_persona_service.chat_memory:
        chat_messages = meme_persona_service.chat_memory[chat_id]
        
        print(f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏: {len(chat_messages)}")
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–∏–ø–∞–º
        admin_messages = [msg for msg in chat_messages if msg.get('is_admin', False)]
        user_messages = [msg for msg in chat_messages if not msg.get('is_admin', False)]
        
        print(f"–°–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤: {len(admin_messages)}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_messages)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–º—è—Ç–∏:")
        for i, msg_data in enumerate(chat_messages[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            admin_flag = "üëë –ê–î–ú–ò–ù" if msg_data.get('is_admin', False) else "üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨"
            print(f"{i}. {admin_flag}: {msg_data['message']}")
        
        if len(chat_messages) > 10:
            print(f"... –∏ –µ—â–µ {len(chat_messages) - 10} —Å–æ–æ–±—â–µ–Ω–∏–π")
    else:
        print("–ü–∞–º—è—Ç—å –ø—É—Å—Ç–∞")

async def test_admin_priority_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–≤"""
    print("\nüé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–≤")
    print("=" * 50)
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 1: –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã")
    chat_id_1 = -1001111111111
    
    admin_only_messages = [
        "–ê–¥–º–∏–Ω 1: —Ä–µ–π–¥!",
        "–ê–¥–º–∏–Ω 2: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º!",
        "–ê–¥–º–∏–Ω 3: –∏–¥–µ–º –≤ —Ç–≤–∏—Ç—Ç–µ—Ä!"
    ]
    
    for i, message in enumerate(admin_only_messages):
        meme_persona_service.remember_chat_message(message, 1000 + i, chat_id_1, is_admin=True)
    
    for i in range(5):
        response = meme_persona_service.get_learned_response(chat_id_1)
        print(f"{i+1}. {response}")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    print("\n–°—Ü–µ–Ω–∞—Ä–∏–π 2: –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    chat_id_2 = -1002222222222
    
    user_only_messages = [
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ø—Ä–∏–≤–µ—Ç!",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –∫–∞–∫ –¥–µ–ª–∞?",
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3: —á—Ç–æ –Ω–æ–≤–æ–≥–æ?"
    ]
    
    for i, message in enumerate(user_only_messages):
        meme_persona_service.remember_chat_message(message, 2000 + i, chat_id_2, is_admin=False)
    
    for i in range(5):
        response = meme_persona_service.get_learned_response(chat_id_2)
        print(f"{i+1}. {response}")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –°–º–µ—à–∞–Ω–Ω—ã–µ (–∞–¥–º–∏–Ω—ã + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
    print("\n–°—Ü–µ–Ω–∞—Ä–∏–π 3: –°–º–µ—à–∞–Ω–Ω—ã–µ (–∞–¥–º–∏–Ω—ã + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)")
    chat_id_3 = -1003333333333
    
    mixed_messages = [
        ("–ê–¥–º–∏–Ω: —Ä–µ–π–¥!", True),
        ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø—Ä–∏–≤–µ—Ç!", False),
        ("–ê–¥–º–∏–Ω: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º!", True),
        ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –∫–∞–∫ –¥–µ–ª–∞?", False),
        ("–ê–¥–º–∏–Ω: –∏–¥–µ–º –≤ —Ç–≤–∏—Ç—Ç–µ—Ä!", True)
    ]
    
    for i, (message, is_admin) in enumerate(mixed_messages):
        meme_persona_service.remember_chat_message(message, 3000 + i, chat_id_3, is_admin=is_admin)
    
    print("–í—ã–±–æ—Ä—ã –∏–∑ —Å–º–µ—à–∞–Ω–Ω–æ–π –ø–∞–º—è—Ç–∏:")
    for i in range(10):
        response = meme_persona_service.get_learned_response(chat_id_3)
        admin_indicator = "üëë" if "–ê–¥–º–∏–Ω" in response else "üë§"
        print(f"{i+1}. {admin_indicator} {response}")

async def test_raid_vs_admin():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É —Ä–µ–π–¥–∞–º–∏ –∏ –∞–¥–º–∏–Ω–∞–º–∏"""
    print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Ä–µ–π–¥–∞–º–∏ –∏ –∞–¥–º–∏–Ω–∞–º–∏")
    print("=" * 50)
    
    print("–†–ï–ô–î–´ –∏ –ê–î–ú–ò–ù–´ - —ç—Ç–æ –†–ê–ó–ù–´–ï –≤–µ—â–∏!")
    print()
    
    print("–†–ï–ô–î–´:")
    print("- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ç–≤–∏—Ç—Ç–µ—Ä")
    print("- –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–ª–æ–≤–∞ '—Ä–µ–π–¥', 'raid'")
    print("- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–≤–∏—Ç—Ç–µ—Ä–µ")
    print()
    
    print("–ê–î–ú–ò–ù–´:")
    print("- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ —Ñ—Ä–∞–∑")
    print("- 70% —à–∞–Ω—Å –≤—ã–±—Ä–∞—Ç—å —Ñ—Ä–∞–∑—É –∞–¥–º–∏–Ω–∞")
    print("- –¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤")
    print()
    
    # –¢–µ—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–µ–π–¥–æ–≤
    print("–¢–µ—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–µ–π–¥–æ–≤:")
    for i in range(3):
        raid_support = meme_persona_service.get_raid_support("raidleader", "admin")
        print(f"{i+1}. {raid_support}")
    
    # –¢–µ—Å—Ç —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤
    print("\n–¢–µ—Å—Ç —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤:")
    for i in range(3):
        admin_quote = meme_persona_service.get_admin_quote("admin")
        print(f"{i+1}. {admin_quote}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–∏ –°–∏—Å—É")
    print("=" * 70)
    
    try:
        await test_admin_priority()
        await test_admin_selection()
        await test_memory_structure()
        await test_admin_priority_scenarios()
        await test_raid_vs_admin()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("–°–∏—Å—É —Ç–µ–ø–µ—Ä—å –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —á–∞—â–µ —Ñ—Ä–∞–∑—ã –∞–¥–º–∏–Ω–æ–≤! üêâ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        logger.exception("Test error")

if __name__ == "__main__":
    asyncio.run(main())
