#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

from sisu_bot.bot.services.enhanced_persona_service import enhanced_persona_service
from sisu_bot.bot.services.chat_activity_service import chat_activity_service
from sisu_bot.bot.services.phrase_memory_service import phrase_memory_service

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_enhanced_persona():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é"""
    print("üêâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç, –°–∏—Å—É!",
        "–¢–û–ù –∫ –ª—É–Ω–µ!",
        "–ê—Ö–∞—Ö–∞, –Ω—É —Ç—ã –¥–∞–µ—à—å!",
        "–ß—Ç–æ –¥—É–º–∞–µ—à—å –ø—Ä–æ –∫—Ä–∏–ø—Ç—É?",
        "–°–∫—É—á–Ω–æ –≤ —á–∞—Ç–µ...",
        "–û–≥–æ–Ω—å! –ö—Ä—É—Ç–æ!",
        "–°–∏—Å—É, —Ä–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç"
    ]
    
    for message in test_messages:
        response = enhanced_persona_service.get_personality_response(message, 12345)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"–û—Ç–≤–µ—Ç: {response}")
        print(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {enhanced_persona_service.get_mood_status()}")
        print("-" * 30)
    
    # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ñ—Ä–∞–∑—ã
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑")
    success = enhanced_persona_service.add_custom_phrase("–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—Ä–∞–∑–∞ –¥–ª—è –°–∏—Å—É", "test")
    print(f"–§—Ä–∞–∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {success}")
    
    # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    stats = enhanced_persona_service.get_personality_stats()
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")

async def test_phrase_memory():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞–º—è—Ç—å —Ñ—Ä–∞–∑"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ —Ñ—Ä–∞–∑")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ñ—Ä–∞–∑
    test_phrases = [
        "–¢–û–ù –∫ –ª—É–Ω–µ!",
        "HODL –¥–æ –ª—É–Ω—ã!",
        "–°–∏—Å—É –ª—É—á—à–∞—è!",
        "–ö—Ä–∏–ø—Ç–∞ —Ä—É–ª–∏—Ç!",
        "Diamond hands!"
    ]
    
    user_id = 12345
    for phrase in test_phrases:
        success = phrase_memory_service.remember_phrase(phrase, user_id)
        print(f"–§—Ä–∞–∑–∞ '{phrase}' –∑–∞–ø–æ–º–Ω–µ–Ω–∞: {success}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ñ—Ä–∞–∑
    print("\nüîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ñ—Ä–∞–∑")
    similar = phrase_memory_service.find_similar_phrases("–¢–û–ù –∫ –∑–≤–µ–∑–¥–∞–º!", user_id)
    print(f"–ü–æ—Ö–æ–∂–∏–µ —Ñ—Ä–∞–∑—ã: {similar}")
    
    # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
    print("\nüé≠ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏")
    improvisation = phrase_memory_service.generate_improvisation("–ß—Ç–æ –¥—É–º–∞–µ—à—å –ø—Ä–æ TON?", user_id)
    print(f"–ò–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è: {improvisation}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ—Ä–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìù –§—Ä–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    user_phrases = phrase_memory_service.get_user_phrases(user_id, limit=5)
    for phrase_data in user_phrases:
        print(f"- '{phrase_data['phrase']}' (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {phrase_data['used_count']} —Ä–∞–∑)")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã
    print("\nüî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã")
    popular = phrase_memory_service.get_popular_phrases(limit=3)
    for phrase_data in popular:
        print(f"- '{phrase_data['phrase']}' (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {phrase_data['count']} —Ä–∞–∑)")
    
    # –¢–µ—Å—Ç 6: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏")
    memory_stats = phrase_memory_service.get_memory_stats()
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {memory_stats}")

async def test_chat_activity():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–æ–≤"""
    print("\nüîá –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–æ–≤")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
    chat_id = -1001234567890
    user_id = 12345
    
    print("–ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
    for i in range(5):
        chat_activity_service.record_message(chat_id, user_id, f"user_{i}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ {i+1} –∑–∞–ø–∏—Å–∞–Ω–æ")
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞")
    stats = chat_activity_service.get_chat_stats(chat_id)
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏—à–∏–Ω—ã (—Å–∏–º—É–ª—è—Ü–∏—è)
    print("\nüîá –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏—à–∏–Ω—ã")
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–∏—à–∏–Ω—É, –∏–∑–º–µ–Ω–∏–≤ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    import datetime
    chat_activity_service.chat_activity[chat_id]["last_message_time"] = datetime.datetime.now() - datetime.timedelta(minutes=6)
    
    encouragement = chat_activity_service.check_silence(chat_id)
    if encouragement:
        print(f"–ü–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏–µ: {encouragement}")
    else:
        print("–ü–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤")
    all_stats = chat_activity_service.get_all_chats_stats()
    print(f"–í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {len(all_stats)}")
    for chat_id, stats in all_stats.items():
        print(f"–ß–∞—Ç {chat_id}: {stats}")

async def test_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    user_id = 12345
    chat_id = -1001234567890
    
    # 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = "–ü—Ä–∏–≤–µ—Ç, –°–∏—Å—É! –ö–∞–∫ –¥–µ–ª–∞?"
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message}")
    
    # 2. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    chat_activity_service.record_message(chat_id, user_id)
    
    # 3. –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ñ—Ä–∞–∑—É
    phrase_memory_service.remember_phrase(message, user_id)
    
    # 4. –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    response = enhanced_persona_service.get_personality_response(message, user_id)
    print(f"–°–∏—Å—É: {response}")
    
    # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {enhanced_persona_service.get_mood_status()}")
    print(f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞: {chat_activity_service.get_chat_stats(chat_id)}")
    
    # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ —Ç–∏—à–∏–Ω–µ
    print("\nüîá –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏—è")
    silence_encouragement = enhanced_persona_service.get_silence_encouragement()
    print(f"–ü–æ–¥–±–∞–¥—Ä–∏–≤–∞–Ω–∏–µ: {silence_encouragement}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –°–∏—Å—É")
    print("=" * 60)
    
    try:
        await test_enhanced_persona()
        await test_phrase_memory()
        await test_chat_activity()
        await test_integration()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("–°–∏—Å—É –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ! üêâ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        logger.exception("Test error")

if __name__ == "__main__":
    asyncio.run(main())
