#!/usr/bin/env python3
import os
import sys
import json
import importlib
from pathlib import Path
from typing import List, Dict, Any

def check_missing_files() -> List[str]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –≤ –∫–æ–¥–µ"""
    missing = []
    data_dir = Path("data")
    expected_files = [
        "troll_triggers.json", "token_triggers.json", "nft_triggers.json",
        "moon_triggers.json", "signal_triggers.json", "holiday_triggers.json",
        "positive_triggers.json"
    ]
    
    for file in expected_files:
        if not (data_dir / file).exists():
            missing.append(str(data_dir / file))
    return missing

def check_import_errors() -> Dict[str, Any]:
    """–ü—ã—Ç–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏"""
    modules_to_check = [
        "app.main",
        "app.presentation.bot.handlers.checkin",
        "app.domain.services",
        "app.domain.services.gamification.points",
        "app.infrastructure.system.allowed_chats_service",
        "app.core.container"
    ]
    
    results = {}
    for module in modules_to_check:
        try:
            importlib.import_module(module)
            results[module] = "OK"
        except ImportError as e:
            results[module] = str(e)
        except Exception as e:
            results[module] = f"UNEXPECTED ERROR: {str(e)}"
    return results

def check_di_container() -> Dict[str, Any]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
    try:
        from app.core.container import Container
        container = Container()
        return {
            "status": "OK",
            "providers": dir(container)
        }
    except Exception as e:
        return {
            "status": "ERROR",
            "error": str(e)
        }

def check_init_files() -> List[str]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—É—Å—Ç—ã–µ __init__.py —Ñ–∞–π–ª—ã"""
    empty_inits = []
    for root, _, files in os.walk("app"):
        if "__init__.py" in files:
            path = Path(root) / "__init__.py"
            if path.stat().st_size == 0:
                empty_inits.append(str(path))
    return empty_inits

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ SisuDatuBot...\n")
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    missing_files = check_missing_files()
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"  - {file}")
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    import_results = check_import_errors()
    for module, status in import_results.items():
        print(f"  - {module}: {status}")
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...")
    di_status = check_di_container()
    print(f"  - DI Container: {di_status['status']}")
    if di_status['status'] == "ERROR":
        print(f"    –û—à–∏–±–∫–∞: {di_status['error']}")
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ __init__.py —Ñ–∞–π–ª–æ–≤...")
    empty_inits = check_init_files()
    if empty_inits:
        print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(empty_inits)} –ø—É—Å—Ç—ã—Ö __init__.py —Ñ–∞–π–ª–æ–≤")
    else:
        print("‚úÖ –ù–µ—Ç –ø—É—Å—Ç—ã—Ö __init__.py —Ñ–∞–π–ª–æ–≤")
    
    print("\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if missing_files:
        print("  - –°–æ–∑–¥–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ JSON-—Ñ–∞–π–ª—ã –≤ data/ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—É—Ç–∏ –≤ –∫–æ–¥–µ")
    
    if any("ERROR" in res for res in import_results.values()):
        print("  - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å __init__.py –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–∫–µ—Ç–æ–≤)")
    
    if di_status['status'] == "ERROR":
        print("  - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å providers)")
    
    if empty_inits:
        print("  - –î–æ–±–∞–≤–∏—Ç—å __all__ –∏–ª–∏ docstring –≤ –ø—É—Å—Ç—ã–µ __init__.py —Ñ–∞–π–ª—ã")

if __name__ == "__main__":
    main() 