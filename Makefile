.PHONY: install test deploy backup clean clean-pyc clean-test clean-build dev docker run lint

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ (–∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è)
install:
	python3 -m venv venv
	venv/bin/pip install -r requirements.txt || venv/Scripts/pip install -r requirements.txt
	@echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
	@echo "üìù –ù–µ –∑–∞–±—É–¥—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å venv:"
	@echo "   source venv/bin/activate  # –¥–ª—è Linux/Mac"
	@echo "   venv/Scripts/activate     # –¥–ª—è Windows"

# –¢–µ—Å—Ç—ã
test:
	pytest tests/

# –î–µ–ø–ª–æ–π
deploy:
	docker-compose up -d --build

# –ë—ç–∫–∞–ø (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π)
backup:
	@if [ -x ./scripts/backup.sh ]; then \
		./scripts/backup.sh; \
	else \
		echo "‚ùå backup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"; \
		exit 1; \
	fi

# –û—á–∏—Å—Ç–∫–∞ Python –∫—ç—à–∞
clean-pyc:
	find . -type f -name "*.py[co]" -delete
	find . -type d -name "__pycache__" -exec rm -r {} +
	@echo "‚úÖ Python –∫—ç—à –æ—á–∏—â–µ–Ω"

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤
clean-test:
	rm -rf .pytest_cache .coverage htmlcov
	@echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ —Å–±–æ—Ä–∫–∏
clean-build:
	rm -rf build dist *.egg-info
	@echo "‚úÖ –§–∞–π–ª—ã —Å–±–æ—Ä–∫–∏ –æ—á–∏—â–µ–Ω—ã"

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
clean: clean-pyc clean-test clean-build
	@echo "‚úÖ –í—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"

dev:
	./dev.sh

docker:
	docker build -t sisu-bot .

run:
	docker run --env-file .env sisu-bot

lint:
	black . && flake8 . 