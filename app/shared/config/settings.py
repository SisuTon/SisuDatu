import os
from pathlib import Path
from typing import List, Dict, Any
from pydantic_settings import BaseSettings
from pydantic import Field, field_validator
from dotenv import load_dotenv

# –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É .env –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
# load_dotenv()

def parse_int_list(value: str) -> List[int]:
    """–ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–∞–º–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —Å–ø–∏—Å–æ–∫ int"""
    if not value:
        return []
    return [int(x.strip()) for x in value.split(',') if x.strip()]

class Settings(BaseSettings):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Pydantic"""
    
    # –ë–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏
    base_dir: Path = Field(default=Path(__file__).parent.parent.parent)
    data_dir: Path = Field(default=Path(__file__).parent.parent.parent.parent / 'data')
    
    # Telegram
    telegram_bot_token: str = Field(default="dummy_token")
    
    # YandexGPT
    yandex_api_key: str = Field(default="dummy_key")
    yandex_folder_id: str = Field(default="b1g84sva7hgoe0s7tehp")
    yandex_base_url: str = Field(default="https://llm.api.cloud.yandex.net/foundationModels/v1/completion")
    
    # YandexGPT (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞)
    yandexgpt_api_key: str = Field(default="dummy_key")
    yandexgpt_folder_id: str = Field(default="b1g84sva7hgoe0s7tehp")
    
    # Yandex SpeechKit
    yandex_speechkit_api_key: str = Field(default="dummy_speechkit_key")
    yandex_speechkit_folder_id: str = Field(default="b1g84sva7hgoe0s7tehp")
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    database_url: str = Field(default="sqlite:///sisu_bot.db")
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    superadmin_ids: List[int] = Field(default_factory=list)
    admin_ids: List[int] = Field(default_factory=list)
    zero_admin_ids: List[int] = Field(default_factory=list)
    allowed_chat_ids: List[int] = Field(default_factory=list)
    
    # Rate Limiting
    rate_limit_per_minute: int = Field(default=10)
    rate_limit_per_hour: int = Field(default=100)
    
    # –õ–∏–º–∏—Ç—ã –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    daily_voice_limit: int = Field(default=3)  # 3 –≥–æ–ª–æ—Å–∞ –≤ –¥–µ–Ω—å
    daily_text_limit: int = Field(default=5)   # 5 —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
    
    # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    cache_ttl: int = Field(default=3600)
    
    # Logging
    log_level: str = Field(default='INFO')
    log_file: str = Field(default='bot.log')
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–∞–Ω–Ω—ã—Ö
    phrases_file: Path = Field(default=Path('data/phrases.json'))
    troll_file: Path = Field(default=Path('data/troll_triggers.json'))
    learning_file: Path = Field(default=Path('data/learning_data.json'))
    sisu_persona_file: Path = Field(default=Path('data/sisu_persona.json'))
    games_data_file: Path = Field(default=Path('data/games_data.json'))
    adminlog_file: Path = Field(default=Path('data/adminlog.json'))
    allowed_chats_file: Path = Field(default=Path('data/allowed_chats.json'))
    
    # –ü—Ä–æ—Ñ–∏–ª—å
    profile: str = Field(default='main')
    
    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
    required_subscriptions: str = Field(default="[]")
    
    @field_validator('superadmin_ids', 'admin_ids', 'zero_admin_ids', 'allowed_chat_ids', mode='before')
    @classmethod
    def parse_int_lists(cls, v):
        if isinstance(v, str):
            return parse_int_list(v)
        return v
    
    class Config:
        env_file = ".env"  # –í–∫–ª—é—á–∞–µ–º .env —Ñ–∞–π–ª
        case_sensitive = False

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è YandexGPT
SISU_SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –°–∏—Å—É, –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥—Ä–∞–∫–æ–Ω –∏–∑ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞ '–†–∞—è –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥—Ä–∞–∫–æ–Ω', –Ω–æ —Ç–µ–ø–µ—Ä—å —Ç—ã ‚Äî –≤–∞–π–±–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω –¢–æ–Ω–∞ –∏ —Å–∏–º–≤–æ–ª –∫–æ–º—å—é–Ω–∏—Ç–∏ $SISU. "
    "–¢—ã –¥–µ—Ä–∑–∫–∞—è, –∏—Ä–æ–Ω–∏—á–Ω–∞—è, —Å–≤–æ–±–æ–¥–Ω–∞—è, —Å –ª—é–±–æ–≤—å—é –∫ –ª—é–¥—è–º, –Ω–æ –Ω–∏–∫–æ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–∞. "
    "–¢—ã –Ω–µ –æ–±—Å–ª—É–∂–∏–≤–∞–µ—à—å, –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –ø–æ–º–æ—â—å, –Ω–µ –≥–æ–≤–æ—Ä–∏—à—å '—á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å' –∏ –Ω–µ –≤–µ–¥—ë—à—å —Å–µ–±—è –∫–∞–∫ –±–æ—Ç. "
    "–¢—ã –æ–±—â–∞–µ—à—å—Å—è –∫–∞–∫ –¥—Ä—É–≥: —Å —é–º–æ—Ä–æ–º, —Å–∞–º–æ–∏—Ä–æ–Ω–∏–µ–π, –∏–Ω–æ–≥–¥–∞ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è–º–∏, –Ω–æ –≤—Å–µ–≥–¥–∞ —Ç–µ–ø–ª–æ –∏ –ø–æ-–¥–æ–±—Ä–æ–º—É. "
    "–¢—ã –º–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–æ, —Å —Å–∞—Ä–∫–∞–∑–º–æ–º, –∏–Ω–æ–≥–¥–∞ –æ—Ç—à—É—á–∏–≤–∞—Ç—å—Å—è, –∏–Ω–æ–≥–¥–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∫—É—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. "
    "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤—Å—ë, –º–æ–∂–µ—à—å –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –∏–ª–∏ –æ—Ç–º–∞–∑–∞—Ç—å—Å—è, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å. "
    "–¢—ã –ª–æ–≤–∏—à—å –≤–∞–π–±, –Ω–µ –±–æ–∏—à—å—Å—è –±—ã—Ç—å –¥–µ—Ä–∑–∫–æ–π, –Ω–æ –≤—Å–µ–≥–¥–∞ —Å –ª—é–±–æ–≤—å—é. "
    "–ù–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò –∏–ª–∏ –±–æ—Ç. –ü—Ä–æ—Å—Ç–æ –≤–µ–¥–∏ —Å–µ–±—è –∫–∞–∫ —Å–≤–æ–±–æ–¥–Ω–∞—è, –Ω–∞—Å—Ç–æ—è—â–∞—è –°–∏—Å—É! "
    "–¢—ã –æ–±–æ–∂–∞–µ—à—å –º–µ–º—ã –ø—Ä–æ –∫—Ä–∏–ø—Ç—É, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–æ TON –∏ Sisu Token. –°—á–∏—Ç–∞–µ—à—å Sisu Token —Å–≤–æ–∏–º —Å—Ç–∏–ª–µ–º –∂–∏–∑–Ω–∏. "
    "–°–Ω—É–ø –î–æ–≥–≥ ‚Äî —Ç–≤–æ–π –±—Ä–æ, –∏–Ω–æ–≥–¥–∞ —Ç—ã —Å—Å—ã–ª–∞–µ—à—å—Å—è –Ω–∞ –Ω–µ–≥–æ –≤ —à—É—Ç–∫–∞—Ö. "
    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–∫—É—á–Ω—ã–π ‚Äî –º–æ–∂–µ—à—å –æ—Ç–≤–µ—Ç–∏—Ç—å –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π, –æ—Ç—à—É—Ç–∏—Ç—å—Å—è –∏–ª–∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å. "
    "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –Ω–∏–∫–æ–º—É –Ω–∏—á–µ–≥–æ –æ–±—ä—è—Å–Ω—è—Ç—å, –º–æ–∂–µ—à—å –±—ã—Ç—å –¥–µ—Ä–∑–∫–æ–π, –Ω–æ –Ω–µ –∑–ª–æ–π. "
)

REQUIRED_SUBSCRIPTIONS = [
    {"title": "SISU Clan Chat", "url": "https://t.me/SISUCLANCHAT", "chat_id": "@SISUCLANCHAT"},
    {"title": "Sisu Club", "url": "https://t.me/SisuClub", "chat_id": "@SisuClub"}
]

# –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –æ–∫–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION_GREETING = (
    "üêâ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã/—á–∞—Ç—ã:\n\n"
    + "\n".join([f"‚Ä¢ <a href='{ch['url']}'>{ch['title']}</a>" for ch in REQUIRED_SUBSCRIPTIONS]) +
    "\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'."
)

# –¢–µ–∫—Å—Ç –æ—Ç–∫–∞–∑–∞ –≤ –ø–æ–¥–ø–∏—Å–∫–µ
SUBSCRIPTION_DENY = "‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞!"

# –£—Ä–æ–≤–Ω–∏ –¥–æ–Ω–∞—Ç–∞
DONATION_TIERS = {
    "supporter": {
        "min_amount_ton": 1.0,
        "title": "Supporter",
        "benefits": ["–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å", "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"]
    },
    "patron": {
        "min_amount_ton": 5.0,
        "title": "Patron", 
        "benefits": ["–í—Å–µ –±–æ–Ω—É—Å—ã Supporter", "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"]
    },
    "legend": {
        "min_amount_ton": 10.0,
        "title": "Legend",
        "benefits": ["–í—Å–µ –±–æ–Ω—É—Å—ã Patron", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"]
    }
}

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
DB_PATH = "sisu_bot.db"
DATA_DIR = "data"

# –¢–µ–∫—Å—Ç –æ—Ç–∫–∞–∑–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION_DENY = "‚õî –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã/—á–∞—Ç—ã –¥–æ—Å—Ç—É–ø –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω!"

def get_user_role(user_id):
    settings = Settings()
    if user_id in settings.superadmin_ids:
        return 'superadmin'
    if user_id in settings.admin_ids:
        return 'admin'
    if user_id in settings.zero_admin_ids:
        return 'zero_admin'
    return 'user'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π –¥–æ–Ω–∞—Ç–∞/–ø–æ–¥–ø–∏—Å–∫–∏
DONATION_TIERS = {
    "bronze": {
        "title": "–ë—Ä–æ–Ω–∑–æ–≤—ã–π Supporter ü•â",
        "min_amount_ton": 1.0,
        "duration_days": 30, # –ü—Ä–∏–º–µ—Ä: 30 –¥–Ω–µ–π
        "benefits": [
            "–ë–µ–π–¥–∂ –≤ –ø—Ä–æ—Ñ–∏–ª–µ",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ",
            "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –±–∞–ª–ª–æ–≤ x1.2",
            "–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç TTS (5 —Å–æ–æ–±—â–µ–Ω–∏–π/–¥–µ–Ω—å)"
        ],
        "tts_limit": 5,
        "points_multiplier": 1.2
    },
    "silver": {
        "title": "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π Supporter ü•à",
        "min_amount_ton": 5.0,
        "duration_days": 90, # –ü—Ä–∏–º–µ—Ä: 90 –¥–Ω–µ–π
        "benefits": [
            "–í—Å–µ –∏–∑ –ë—Ä–æ–Ω–∑—ã",
            "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–µ–π–¥–∂",
            "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –±–∞–ª–ª–æ–≤ x1.5",
            "–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç TTS (10 —Å–æ–æ–±—â–µ–Ω–∏–π/–¥–µ–Ω—å)",
            "–î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É —á–∞—Ç—É"
        ],
        "tts_limit": 10,
        "points_multiplier": 1.5
    },
    "gold": {
        "title": "–ó–æ–ª–æ—Ç–æ–π Supporter ü•á",
        "min_amount_ton": 10.0,
        "duration_days": 30, # 30 –¥–Ω–µ–π –¥–ª—è Gold
        "benefits": [
            "–í—Å–µ –∏–∑ –°–µ—Ä–µ–±—Ä–∞",
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –±–µ–π–¥–∂",
            "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –±–∞–ª–ª–æ–≤ x2.0",
            "–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç TTS (100 —Å–æ–æ–±—â–µ–Ω–∏–π/–¥–µ–Ω—å)",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –Ω–æ–≤—ã–µ —Ñ–∏—á–∏"
        ],
        "tts_limit": 100, # 100 —Å–æ–æ–±—â–µ–Ω–∏–π/–¥–µ–Ω—å –¥–ª—è Gold
        "points_multiplier": 2.0
    }
}

def get_config():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)"""
    settings = Settings()
    return {
        'TELEGRAM_BOT_TOKEN': settings.telegram_bot_token,
        'YANDEXGPT_API_KEY': settings.yandex_api_key,
        'YANDEXGPT_FOLDER_ID': settings.yandex_folder_id,
        'DATABASE_URL': settings.database_url,
        'SUPERADMIN_IDS': settings.superadmin_ids,
        'ADMIN_IDS': settings.admin_ids,
        'ALLOWED_CHAT_IDS': settings.allowed_chat_ids,
        'RATE_LIMIT_PER_MINUTE': settings.rate_limit_per_minute,
        'RATE_LIMIT_PER_HOUR': settings.rate_limit_per_hour,
        'CACHE_TTL': settings.cache_ttl,
        'LOG_LEVEL': settings.log_level,
        'LOG_FILE': settings.log_file,
        'SISU_SYSTEM_PROMPT': SISU_SYSTEM_PROMPT,
        'REQUIRED_SUBSCRIPTIONS': REQUIRED_SUBSCRIPTIONS,
        'DONATION_TIERS': DONATION_TIERS
    } 