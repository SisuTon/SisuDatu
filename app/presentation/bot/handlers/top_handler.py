from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from app.domain.services.gamification import points as points_service
from app.domain.services.gamification import top as top_service
import logging

router = Router()

@router.message(Command("top"))
async def top_handler(msg: Message):
    try:
        is_private_chat = (msg.chat.type == "private")
        if is_private_chat:
            top_list = top_service.get_top_users(limit=15)
            title_text = "<b>üèÜ –ì–õ–û–ë–ê–õ–¨–ù–´–ô –¢–û–ü SISU:</b>\n"
        else:
            top_list = top_service.get_top_users(limit=15, chat_id=msg.chat.id)
            title_text = f"<b>üèÜ –¢–û–ü –í –ß–ê–¢–ï {msg.chat.title}:</b>\n"
        text = title_text
        medals = ["ü•á", "ü•à", "ü•â"]
        if top_list:
            for i, user in enumerate(top_list, 1):
                username = user.username
                first_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                points = float(user.points or 0)
                rank_code = user.rank or "novice"
                rank = points_service.RANKS.get(rank_code, {}).get("title", "–ë–µ–∑ —Ä–∞–Ω–≥–∞")
                active_days = user.active_days or 0
                referrals = user.referrals or 0
                supporter = user.is_supporter or False
                
                # –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω–∏
                if username:
                    tag = f"@{username}"
                elif first_name and first_name != "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":
                    tag = f'<a href="tg://user?id={user.id}">{first_name}</a>'
                else:
                    tag = f'<a href="tg://user?id={user.id}">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id}</a>'
                medal = medals[i-1] if i <= 3 else f"{i}."
                supporter_line = "üêâ –î–æ–Ω–∞—Ç–µ—Ä (–≤–æ–∏–Ω –¥—Ä–∞–∫–æ–Ω–∞)" if supporter else ""
                text += f"\n{medal} {tag}\n"
                if supporter_line:
                    text += f"   {supporter_line}\n"
                text += f"   ‚≠ê –ë–∞–ª–ª—ã: {points}\n   üìÖ –î–Ω–∏: {active_days}\n   üë• –†–µ—Ñ–µ—Ä–∞–ª—ã: {referrals}\n   üèÖ –†–∞–Ω–≥: {rank}\n"
            text += "\n–•–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø? –ë—É–¥—å –∞–∫—Ç–∏–≤–Ω–µ–µ –∏ –∑–æ–≤–∏ –¥—Ä—É–∑–µ–π!"
            text += "\nüíé –î–æ–Ω–∞—Ç–µ—Ä—ã ‚Äî —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ –≤–æ–∏–Ω—ã –¥—Ä–∞–∫–æ–Ω–∞!"
        else:
            text += "\n–í —Ç–æ–ø–µ –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç! –ë—É–¥—å –ø–µ—Ä–≤—ã–º!"
        await msg.answer(text[:4096], parse_mode="HTML")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –≤ top_handler")
        await msg.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–ø–∞ üò¢") 