"""
User Handler - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–¥–µ—Å—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from typing import Dict, Any


router = Router()


@router.message(Command("profile"))
async def profile_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    
    profile_text = f"""
üë§ **–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**

üÜî ID: `{user_id}`
üë§ –ò–º—è: {username}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {message.date.strftime('%d.%m.%Y')}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: 0
‚Ä¢ –û—á–∫–æ–≤: 0
‚Ä¢ –†–∞–Ω–≥: –ù–æ–≤–∏—á–æ–∫
    """
    
    await message.answer(profile_text, parse_mode="Markdown")


@router.message(Command("settings"))
async def settings_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings."""
    settings_text = """
‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**

üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã
üåç –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π
üé® –¢–µ–º–∞: –°–≤–µ—Ç–ª–∞—è

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:
    """
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    await message.answer(settings_text, parse_mode="Markdown")


@router.message(Command("help"))
async def help_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = """
ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º**

üìã **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/profile - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üéÆ **–ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:**
/games - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã
/motivation - –ü–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é

üèÜ **–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è:**
/points - –ü–æ–∫–∞–∑–∞—Ç—å –æ—á–∫–∏
/rank - –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–Ω–≥
/top - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤

üíù **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**
/donate - –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    
    await message.answer(help_text, parse_mode="Markdown")


@router.callback_query(F.data.startswith("user_"))
async def user_callback_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    action = callback.data.split("_")[1]
    
    if action == "profile":
        await profile_handler(callback.message)
    elif action == "settings":
        await settings_handler(callback.message)
    elif action == "help":
        await help_handler(callback.message)
    else:
        await callback.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
    
    await callback.answer()